{"version":3,"sources":["Components/AccountBookTemplate.js","Components/AccountBookContext.js","Components/AccountBookHead.js","Components/MySelectBox.js","StaticDatas/staticDatas.js","Components/AccountBookSelectCategory.js","Components/MyButton.js","Components/useInputs.js","Components/DialogsFormType/AccountBookForm.js","Components/DialogsFormType/ConfirmForm.js","Components/MyDialog.js","Components/AccountBookItem.js","Components/AccountBookList.js","Components/AccountBookCreate.js","App.js","serviceWorker.js","index.js"],"names":["AccountBookTemplateBlock","styled","div","React","memo","children","initialAccountBooks","accountBookReducer","state","action","type","concat","newAccountBook","filter","accountBook","id","console","log","map","updatedAccountBook","Error","AccountBookStateContext","createContext","AccountBookDispatchContext","AccountBookNextIdContext","AccountBookSelectCategoryContext","AccountBookProvider","useReducer","dispatch","selectCategoryState","useState","nextId","useRef","length","Provider","value","useAccountBookState","context","useContext","useAccountBookDispatch","useAccountBookSelectedCategory","AccountBookHeadBlock","PaymentNum","span","props","isMinus","css","allPayment","reduce","accumulator","amount","dateString","Date","toLocaleDateString","year","month","day","className","MySelectBoxBlock","listview","SelectBox","OptionList","ul","Option","li","MySelectBox","options","selectBoxStyle","listviewStyle","onSelectedChange","viewOption","setViewOption","selectedOption","setSelectedOption","prevSelectedId","options_left","option","toggleViewOption","useCallback","selectOption","e","selectedOptions","find","parseInt","target","current","viewStyle","style","onClick","text","key","defaultProps","width","fontSize","fontWeight","categorys","color","AccountBookSelectCategoryBlock","setSelectCategory","selectId","colorStyles","lighten","darken","outline","sizes","large","height","medium","small","sizeStyles","size","fullWidthStyle","fullWidth","StyledButton","button","MyButton","rest","reducer","name","initialForm","form","slideUp","keyframes","AccountBookFormBlock","ButtonGroup","Input","input","AccountBookForm","onConfirm","onCancel","create","update","updateObj","categorys_left","category","initialText","title","initialPayment","initialCategory","selectCategoryId","useInputs","payment","onChange","reset","clickHandler","autoFocus","ConfirmFormBlock","ConfirmForm","fadeIn","MyDialogBlock","Category","Text","Payment","Update","Remove","AccountBookItemBlock","categoryObj","categoryElement","removeOpen","setRemoveOpen","updateOpen","setUpdateOpen","onRemoveClick","onUpdateClick","onRemoveConfirm","onRemoveCancel","onUpdateConfirm","onUpdateCancel","AccountBookListBlock","accountBooks","selectedCategory","filteredAccountBooks","CircleButtton","open","setOpen","useAccountBookNextId","onToggle","onCreate","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e149d464.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst AccountBookTemplateBlock = styled.div`\n  width: 512px;\n  height: 768px;\n\n  position: relative;\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.04);\n\n  margin: 0 auto;\n  margin-top: 64px;\n  margin-bottom: 32px;\n\n  display: flex;\n  flex-direction: column;\n\n  padding: 50px;\n`;\n\nfunction AccountBookTemplate({ children }) {\n  return <AccountBookTemplateBlock>{children}</AccountBookTemplateBlock>;\n}\n\nexport default React.memo(AccountBookTemplate);\n","import React, {\n  useReducer,\n  createContext,\n  useState,\n  useContext,\n  useRef,\n} from 'react';\n\nconst initialAccountBooks = [\n  // { id: 1, title: '용개반점', category: 1, amount: 7000 },\n  // { id: 2, title: '양배추', category: 2, amount: 5000 },\n  // { id: 3, title: '택시비', category: 3, amount: 20000 },\n  // { id: 4, title: '관리비', category: 4, amount: 100000 },\n  // { id: 5, title: '병원진료', category: 5, amount: 7000 },\n];\n\nfunction accountBookReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      return state.concat(action.newAccountBook);\n    case 'REMOVE':\n      return state.filter(accountBook => accountBook.id !== action.id);\n    case 'UPDATE':\n      console.log(action);\n      return state.map(accountBook =>\n        accountBook.id === action.updatedAccountBook.id\n          ? action.updatedAccountBook\n          : accountBook\n      );\n    default:\n      throw new Error(\n        `unhandled action in accountBookReducer. type : ${action.type}`\n      );\n  }\n}\n\nconst AccountBookStateContext = createContext();\nconst AccountBookDispatchContext = createContext();\nconst AccountBookNextIdContext = createContext();\nconst AccountBookSelectCategoryContext = createContext();\n\nexport function AccountBookProvider({ children }) {\n  const [state, dispatch] = useReducer(accountBookReducer, initialAccountBooks);\n  const selectCategoryState = useState(0);\n  const nextId = useRef(initialAccountBooks.length + 1);\n\n  return (\n    <AccountBookStateContext.Provider value={state}>\n      <AccountBookDispatchContext.Provider value={dispatch}>\n        <AccountBookNextIdContext.Provider value={nextId}>\n          <AccountBookSelectCategoryContext.Provider\n            value={selectCategoryState}\n          >\n            {children}\n          </AccountBookSelectCategoryContext.Provider>\n        </AccountBookNextIdContext.Provider>\n      </AccountBookDispatchContext.Provider>\n    </AccountBookStateContext.Provider>\n  );\n}\n\nexport function useAccountBookState() {\n  const context = useContext(AccountBookStateContext);\n  if (!context) {\n    throw new Error('Cannot find AccountBookStateContext Provider');\n  }\n  return context;\n}\n\nexport function useAccountBookDispatch() {\n  const context = useContext(AccountBookDispatchContext);\n  if (!context) {\n    throw new Error('Cannot find AccountBookDispatchContext Provider');\n  }\n  return context;\n}\n\nexport function useAccountBookNextId() {\n  const context = useContext(AccountBookNextIdContext);\n  if (!context) {\n    throw new Error('Cannot find AccountBookNextIdContext Provider');\n  }\n  return context;\n}\n\nexport function useAccountBookSelectedCategory() {\n  const context = useContext(AccountBookSelectCategoryContext);\n  if (!context) {\n    throw new Error('Cannot find AccountBookSelectCategoryContext Provider');\n  }\n  return context;\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useAccountBookState } from './AccountBookContext';\n\nconst AccountBookHeadBlock = styled.div`\n  border-bottom: 1px solid #adb5bd;\n\n  h1 {\n    margin: 0;\n    font-size: 36px;\n  }\n\n  .date {\n    margin-top: 25px;\n    font-size: 21px;\n    font-weight: bold;\n  }\n\n  .all-payment {\n    font-size: 21px;\n    margin-top: 20px;\n    margin-bottom: 25px;\n    font-weight: bold;\n  }\n`;\n\nconst PaymentNum = styled.span`\n  margin-left: 5px;\n  color: #37b24d;\n  ${props =>\n    props.isMinus &&\n    css`\n      color: #f03e3e;\n    `}\n`;\n\nfunction AccountBookHead() {\n  const accountBooks = useAccountBookState();\n  const allPayment = accountBooks.reduce(\n    (accumulator, accountBook) => accumulator + accountBook.amount,\n    0\n  );\n\n  const dateString = new Date().toLocaleDateString('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n\n  return (\n    <AccountBookHeadBlock>\n      <h1>오늘의 지출</h1>\n      <div className=\"date\">{dateString}</div>\n      <div className=\"all-payment\">\n        총 지출:\n        <PaymentNum isMinus={allPayment !== 0}>{allPayment * -1} 원</PaymentNum>\n      </div>\n    </AccountBookHeadBlock>\n  );\n}\n\nexport default React.memo(AccountBookHead);\n","import React, { useState, useRef, useCallback } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdExpandMore } from 'react-icons/md';\n\nconst MySelectBoxBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: space-around;\n  border: 1px solid #adb5bd;\n  border-radius: 3px;\n\n  overflow: auto;\n\n  ${props =>\n    props.listview &&\n    css`\n      background: #868e96;\n      cursor: default;\n      color: white;\n    `};\n`;\n\nconst SelectBox = styled.div`\n  padding: 2.8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  overflow-x: auto;\n  ${props =>\n    props.listview\n      ? css`\n          background: #3b5bdb;\n          margin-bottom: 2px;\n          cursor: default;\n          &:hover {\n            background: #3b5bdb;\n          }\n        `\n      : css`\n          cursor: pointer;\n          &:hover {\n            background: #748ffc;\n          }\n        `};\n`;\n\nconst OptionList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  ${props =>\n    props.listview\n      ? css`\n          display: block;\n        `\n      : css`\n          display: none;\n        `};\n`;\n\nconst Option = styled.li`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & + & {\n    margin-top: 0.5rem;\n  }\n\n  &:hover {\n    background: #748ffc;\n  }\n`;\n\nfunction MySelectBox({\n  options,\n  value,\n  selectBoxStyle,\n  listviewStyle,\n  onSelectedChange,\n}) {\n  const [viewOption, setViewOption] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(value);\n  const prevSelectedId = useRef(selectedOption.id);\n\n  const options_left = options\n    ? options.filter(option => option.id !== selectedOption.id)\n    : null;\n\n  const toggleViewOption = useCallback(() => {\n    setViewOption(!viewOption);\n  }, [viewOption]);\n\n  if (options_left == null) return null;\n\n  const selectOption = e => {\n    const selectedOptions = options.find(\n      option => option.id === parseInt(e.target.id)\n    );\n    setSelectedOption(selectedOptions);\n    toggleViewOption();\n    if (prevSelectedId !== selectedOptions.id) {\n      onSelectedChange && onSelectedChange(selectedOptions.id);\n      prevSelectedId.current = selectedOptions.id;\n    }\n  };\n\n  const viewStyle = viewOption ? listviewStyle : selectBoxStyle;\n\n  return (\n    <MySelectBoxBlock listview={viewOption} style={viewStyle}>\n      <SelectBox listview={viewOption} onClick={toggleViewOption}>\n        {selectedOption.text} <MdExpandMore />\n      </SelectBox>\n      <OptionList listview={viewOption}>\n        {options_left &&\n          options_left.map(option => (\n            <Option key={option.id} id={option.id} onClick={selectOption}>\n              {option.text}\n            </Option>\n          ))}\n      </OptionList>\n    </MySelectBoxBlock>\n  );\n}\n\nMySelectBox.defaultProps = {\n  selectBoxStyle: {\n    width: 'auto',\n    fontSize: '14px',\n    fontWeight: '400',\n  },\n  listviewStyle: {\n    width: '70px',\n    fontSize: '14px',\n    fontWeight: '400',\n  },\n};\n\nexport default React.memo(MySelectBox);\n","export const categorys = [\n  { id: 0, text: '전체', color: '#e7f5ff' },\n  { id: 1, text: '식사', color: '#ffec99' },\n  { id: 2, text: '식료품', color: '#d8f5a2' },\n  { id: 3, text: '교통', color: '#ffc078' },\n  { id: 4, text: '생활', color: '#da77f2' },\n  { id: 5, text: '의료', color: '#4dabf7' },\n];\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport MySelectBox from './MySelectBox';\nimport { useAccountBookSelectedCategory } from './AccountBookContext';\nimport { categorys } from '../StaticDatas/staticDatas';\n\nconst AccountBookSelectCategoryBlock = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  border-bottom: 1px solid #adb5bd;\n\n  padding: 15px 0px;\n  font-size: 21px;\n  font-weight: bold;\n\n  span {\n    margin-right: 10px;\n  }\n`;\n\nfunction AccountBookSelectCategory() {\n  const [_, setSelectCategory] = useAccountBookSelectedCategory();\n\n  const onSelectedChange = useCallback(\n    selectId => {\n      setSelectCategory(selectId);\n    },\n    [setSelectCategory]\n  );\n\n  return (\n    <AccountBookSelectCategoryBlock>\n      <span>카테고리별로 보기:</span>\n      {categorys && (\n        <MySelectBox\n          options={categorys}\n          value={categorys[0]}\n          onSelectedChange={onSelectedChange}\n        />\n      )}\n    </AccountBookSelectCategoryBlock>\n  );\n}\n\nexport default React.memo(AccountBookSelectCategory);\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nconst colorStyles = css`\n  ${({ color }) => {\n    return css`\n      background: ${color};\n      &:hover {\n        background: ${lighten(0.1, color)};\n      }\n      &:active {\n        background: ${darken(0.1, color)};\n      }\n      ${props =>\n        props.outline &&\n        css`\n          color: ${color};\n          background: none;\n          border: 1px solid ${color};\n          &:hover {\n            background: ${color};\n            color: white;\n          }\n        `}\n    `;\n  }}\n`;\n\nconst sizes = {\n  large: {\n    height: '3rem',\n    fontSize: '1.25rem',\n  },\n  medium: {\n    height: '2.25rem',\n    fontSize: '1rem',\n  },\n  small: {\n    height: '1.75rem',\n    fontSize: '0.875rem',\n  },\n};\n\nconst sizeStyles = css`\n  ${({ size }) => css`\n    height: ${sizes[size].height};\n    font-size: ${sizes[size].fontSize};\n  `}\n`;\n\nconst fullWidthStyle = css`\n  ${props =>\n    props.fullWidth &&\n    css`\n      width: 100%;\n      justify-content: center;\n      & + & {\n        margin-left: 0;\n        margin-top: 1rem;\n      }\n    `}\n`;\n\nconst StyledButton = styled.button`\n  /* 공통 스타일 */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  outline: none;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n  padding-left: 1rem;\n  padding-right: 1rem;\n\n  /* 크기 */\n  ${sizeStyles}\n\n  /* 색상 */\n  ${colorStyles}\n\n  /* 기타 */\n  & + & {\n    margin-left: 1rem;\n  }\n\n  ${fullWidthStyle}\n`;\n\nfunction MyButton({ children, color, size, outline, fullWidth, ...rest }) {\n  return (\n    <StyledButton\n      color={color}\n      size={size}\n      outline={outline}\n      fullWidth={fullWidth}\n      {...rest}\n    >\n      {children}\n    </StyledButton>\n  );\n}\n\nMyButton.defaultProps = {\n  color: '#4263eb',\n  size: 'medium',\n};\n\nexport default React.memo(MyButton);\n","import React, { useCallback, useReducer } from 'react';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state, [action.name]: action.value };\n\n    case 'RESET':\n      return { ...action.initialForm };\n\n    default:\n      throw new Error('Unhandled action');\n  }\n}\n\nfunction useInputs(initialForm) {\n  // const[form, setForm] = useState(initialForm);\n  const [form, dispatch] = useReducer(reducer, initialForm);\n\n  const onChange = useCallback(e => {\n    const { name, value } = e.target;\n\n    // setForm((form) => ({...form, [name]:value}));\n\n    dispatch({\n      type: 'CHANGE',\n      name,\n      value,\n    });\n  }, []);\n\n  // const reset = useCallback(() => setForm(initialForm), [initialForm]);\n  const reset = useCallback(() => {\n    dispatch({\n      type: 'RESET',\n      initialForm,\n    });\n  }, [initialForm]);\n\n  return [form, onChange, reset];\n}\n\nexport default React.memo(useInputs);\n","import React, { useCallback } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { categorys } from '../../StaticDatas/staticDatas';\nimport MySelectBox from '../MySelectBox';\nimport MyButton from '../MyButton';\nimport { useRef } from 'react';\nimport useInputs from '../useInputs';\n\nconst slideUp = keyframes`\n  from {\n    transform: translateY(200px);\n  }\n  to {\n    transform: translateY(0px);\n  }\n`;\n\nconst AccountBookFormBlock = styled.div`\n  width: 320px;\n  padding: 1.5rem;\n  background: white;\n  border-radius: 2px;\n\n  animation-duration: 0.25s;\n  animation-timing-function: ease-out;\n  animation-name: ${slideUp};\n  animation-fill-mode: forwards;\n`;\n\nconst ButtonGroup = styled.div`\n  margin-top: 3rem;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst Input = styled.input`\n  padding: 5px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n  margin-bottom: 20px;\n`;\n\nfunction AccountBookForm({ onConfirm, onCancel, create, update, updateObj }) {\n  const categorys_left = categorys.filter(category => category.id !== 0);\n\n  const initialText = updateObj ? updateObj.title : '';\n  const initialPayment = updateObj ? parseInt(updateObj.amount) : 0;\n  const initialCategory = updateObj\n    ? categorys_left.find(category => category.id === updateObj.category)\n    : categorys_left[0];\n\n  const selectCategoryId = useRef(1);\n\n  const [form, onChange, reset] = useInputs({\n    title: initialText,\n    payment: initialPayment,\n  });\n  const { title, payment } = form;\n\n  const onSelectedChange = useCallback(\n    selectId => {\n      selectCategoryId.current = selectId;\n    },\n    [selectCategoryId]\n  );\n\n  const clickHandler = useCallback(\n    e => {\n      if (e.target.name === 'confirm') {\n        const newAccountBook = {\n          title,\n          category: selectCategoryId.current,\n          amount: parseInt(payment),\n        };\n        onConfirm(newAccountBook);\n      } else {\n        onCancel();\n      }\n      reset();\n    },\n    [onCancel, onConfirm, payment, reset, title]\n  );\n\n  return (\n    <AccountBookFormBlock>\n      <h2>\n        지출\n        {create && ' 등록'}\n        {update && ' 수정'}\n      </h2>\n      <h3>내용</h3>\n      <Input autoFocus name=\"title\" value={title} onChange={onChange} />\n      <h3>금액</h3>\n      <Input type=\"number\" name=\"payment\" value={payment} onChange={onChange} />\n      <h3>카테고리</h3>\n      <MySelectBox\n        options={categorys_left}\n        value={initialCategory}\n        selectBoxStyle={{ width: '100%', fontSize: '18px' }}\n        listviewStyle={{ width: '100%' }}\n        onSelectedChange={onSelectedChange}\n      />\n      <ButtonGroup>\n        <MyButton color=\"gray\" name=\"cancel\" onClick={clickHandler}>\n          취소\n        </MyButton>\n        <MyButton name=\"confirm\" onClick={clickHandler}>\n          {create && ' 등록'}\n          {update && ' 수정'}\n        </MyButton>\n      </ButtonGroup>\n    </AccountBookFormBlock>\n  );\n}\n\nexport default AccountBookForm;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport MyButton from '../MyButton';\n\nconst slideUp = keyframes`\n  from {\n    transform: translateY(200px);\n  }\n  to {\n    transform: translateY(0px);\n  }\n`;\n\nconst ConfirmFormBlock = styled.div`\n  width: 320px;\n  padding: 1.5rem;\n  background: white;\n  border-radius: 2px;\n\n  animation-duration: 0.25s;\n  animation-timing-function: ease-out;\n  animation-name: ${slideUp};\n  animation-fill-mode: forwards;\n`;\n\nconst ButtonGroup = styled.div`\n  margin-top: 3rem;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nfunction ConfirmForm({ text, onConfirm, onCancel }) {\n  return (\n    <ConfirmFormBlock>\n      <h2>{text}</h2>\n      <ButtonGroup>\n        <MyButton color=\"gray\" name=\"cancel\" onClick={onCancel}>\n          취소\n        </MyButton>\n        <MyButton color=\"#f03e3e\" name=\"confirm\" onClick={onConfirm}>\n          삭제\n        </MyButton>\n      </ButtonGroup>\n    </ConfirmFormBlock>\n  );\n}\n\nexport default ConfirmForm;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport AccountBookForm from './DialogsFormType/AccountBookForm';\nimport ConfirmForm from './DialogsFormType/ConfirmForm';\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0\n  }\n  to {\n    opacity: 1\n  }\n`;\n\nconst MyDialogBlock = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.8);\n  padding: 20px;\n  h1 {\n    margin: 0;\n  }\n  h3 {\n    margin: 0;\n  }\n\n  animation-duration: 0.25s;\n  animation-timing-function: ease-out;\n  animation-name: ${fadeIn};\n  animation-fill-mode: forwards;\n`;\n\nfunction MyDialog({ type, onConfirm, onCancel, updateObj }) {\n  return (\n    <MyDialogBlock>\n      {type === 'create' && (\n        <AccountBookForm create onConfirm={onConfirm} onCancel={onCancel} />\n      )}\n      {type === 'update' && (\n        <AccountBookForm\n          update\n          updateObj={updateObj}\n          onConfirm={onConfirm}\n          onCancel={onCancel}\n        />\n      )}\n      {type === 'remove' && (\n        <ConfirmForm\n          text=\"정말 삭제하시겠습니까?\"\n          onConfirm={onConfirm}\n          onCancel={onCancel}\n        />\n      )}\n    </MyDialogBlock>\n  );\n}\n\nexport default React.memo(MyDialog);\n","import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { MdCreate, MdDelete } from 'react-icons/md';\nimport { useAccountBookDispatch } from './AccountBookContext';\nimport MyDialog from './MyDialog';\nimport { categorys } from '../StaticDatas/staticDatas';\n\nconst Category = styled.div`\n  padding: 13px 20px;\n  background-color: ${props => props.color || '#ffffff'};\n  border-radius: 10px;\n  font-size: 19px;\n  font-weight: 400;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n`;\n\nconst Text = styled.div`\n  flex: 1;\n  color: #495057;\n`;\n\nconst Payment = styled.div`\n  color: #f03e3e;\n\n  margin-right: 20px;\n`;\n\nconst Update = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  &:hover {\n    color: #ff6b6b;\n  }\n`;\n\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 10px;\n  cursor: pointer;\n  &:hover {\n    color: #ff6b6b;\n  }\n`;\n\nconst AccountBookItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nfunction AccountBookItem({ id, title, amount, category }) {\n  const categoryObj = useCallback(\n    categorys.find(categoryElement => categoryElement.id === category)\n  );\n\n  const [removeOpen, setRemoveOpen] = useState(false);\n  const [updateOpen, setUpdateOpen] = useState(false);\n  const dispatch = useAccountBookDispatch();\n\n  const onRemoveClick = useCallback(() => setRemoveOpen(!removeOpen), [\n    removeOpen,\n  ]);\n  const onUpdateClick = useCallback(() => setUpdateOpen(!updateOpen), [\n    updateOpen,\n  ]);\n\n  const onRemoveConfirm = useCallback(() => {\n    dispatch({ type: 'REMOVE', id });\n    setRemoveOpen(false);\n  }, [id, dispatch]);\n\n  const onRemoveCancel = useCallback(() => {\n    setRemoveOpen(false);\n  }, []);\n\n  const onUpdateConfirm = useCallback(\n    updatedAccountBook => {\n      updatedAccountBook = { id, ...updatedAccountBook };\n      dispatch({ type: 'UPDATE', updatedAccountBook });\n      setUpdateOpen(false);\n    },\n    [id, dispatch]\n  );\n\n  const onUpdateCancel = useCallback(() => {\n    setUpdateOpen(false);\n  }, []);\n\n  return (\n    <>\n      {removeOpen && (\n        <MyDialog\n          type=\"remove\"\n          onConfirm={onRemoveConfirm}\n          onCancel={onRemoveCancel}\n        />\n      )}\n      {updateOpen && (\n        <MyDialog\n          type=\"update\"\n          onConfirm={onUpdateConfirm}\n          onCancel={onUpdateCancel}\n          updateObj={{ id, title, amount, category }}\n        />\n      )}\n      <AccountBookItemBlock>\n        <Category color={categoryObj.color}>{categoryObj.text}</Category>\n        <Text>{title}</Text>\n        <Payment>{amount !== 0 ? '-' + amount : '0'} 원</Payment>\n        <Update onClick={onUpdateClick}>\n          <MdCreate />\n        </Update>\n        <Remove onClick={onRemoveClick}>\n          <MdDelete />\n        </Remove>\n      </AccountBookItemBlock>\n    </>\n  );\n}\n\nexport default React.memo(AccountBookItem);\n","import React from 'react';\nimport styled from 'styled-components';\nimport AccountBookItem from './AccountBookItem';\nimport {\n  useAccountBookState,\n  useAccountBookSelectedCategory,\n} from './AccountBookContext';\n\nconst AccountBookListBlock = styled.div`\n  flex: 1;\n  padding-bottom: 48px;\n  overflow-y: auto;\n`;\n\nfunction AccountBookList() {\n  const accountBooks = useAccountBookState();\n  const [selectedCategory, _] = useAccountBookSelectedCategory();\n\n  const filteredAccountBooks =\n    selectedCategory === 0\n      ? accountBooks\n      : accountBooks.filter(\n          accountBook => accountBook.category === selectedCategory\n        );\n\n  return (\n    <AccountBookListBlock>\n      {filteredAccountBooks.map(accountBook => (\n        <AccountBookItem\n          id={accountBook.id}\n          key={accountBook.id}\n          category={accountBook.category}\n          title={accountBook.title}\n          amount={accountBook.amount}\n        />\n      ))}\n    </AccountBookListBlock>\n  );\n}\n\nexport default React.memo(AccountBookList);\n","import React, { useState, useCallback } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport {\n  useAccountBookDispatch,\n  useAccountBookNextId,\n} from './AccountBookContext';\nimport MyDialog from './MyDialog';\n\nconst CircleButtton = styled.button`\n  background: #0c8599;\n  &:hover {\n    background: #15aabf;\n  }\n  &:active {\n    background: #0b7285;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  position: absolute;\n  right: 2%;\n  bottom: 2%;\n\n  font-size: 60px;\n  color: white;\n  border-radius: 50%;\n\n  border: none;\n  outline: none;\n\n  transition: 0.125s all ease-in;\n  ${props =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: rotate(45deg);\n    `}\n`;\n\nfunction AccountBookCreate() {\n  const [open, setOpen] = useState(false);\n\n  const dispatch = useAccountBookDispatch();\n  const nextId = useAccountBookNextId();\n\n  const onToggle = useCallback(() => setOpen(!open), [open]);\n\n  const onCreate = useCallback(\n    newAccountBook => {\n      dispatch({\n        type: 'CREATE',\n        newAccountBook: { ...newAccountBook, id: nextId.current },\n      });\n      nextId.current += 1;\n      setOpen(false);\n    },\n    [dispatch, nextId]\n  );\n\n  const onCancel = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <>\n      {open && (\n        <MyDialog\n          type=\"create\"\n          onConfirm={onCreate}\n          onCancel={onCancel}\n        ></MyDialog>\n      )}\n      <CircleButtton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButtton>\n    </>\n  );\n}\n\nexport default React.memo(AccountBookCreate);\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport AccountBookTemplate from './Components/AccountBookTemplate';\nimport AccountBookHead from './Components/AccountBookHead';\nimport AccountBookSelectCategory from './Components/AccountBookSelectCategory';\nimport AccountBookList from './Components/AccountBookList';\nimport AccountBookCreate from './Components/AccountBookCreate';\nimport { AccountBookProvider } from './Components/AccountBookContext';\n\nconst GlobalStyle = createGlobalStyle`\n  body{\n    background-color: #dee2e6;\n  }\n`;\n\nfunction App() {\n  return (\n    <AccountBookProvider>\n      <GlobalStyle />\n      <AccountBookTemplate>\n        <AccountBookHead />\n        <AccountBookSelectCategory />\n        <AccountBookList />\n        <AccountBookCreate />\n      </AccountBookTemplate>\n    </AccountBookProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}