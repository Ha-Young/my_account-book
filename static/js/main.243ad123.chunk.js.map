{"version":3,"sources":["Components/AccountBookTemplate.js","Components/AccountBookContext.js","Components/AccountBookHead.js","Components/MySelectBox.js","StaticDatas/staticDatas.js","Components/AccountBookSelectCategory.js","Components/MyButton.js","Components/useInputs.js","Components/DialogsFormType/AccountBookForm.js","Components/DialogsFormType/ConfirmForm.js","Components/MyDialog.js","Components/AccountBookItem.js","Components/AccountBookList.js","Components/AccountBookCreate.js","App.js","serviceWorker.js","index.js"],"names":["AccountBookTemplateBlock","styled","div","React","memo","children","initialAccountBooks","accountBookReducer","state","action","type","concat","newAccountBook","filter","accountBook","id","console","log","map","updatedAccountBook","Error","AccountBookStateContext","createContext","AccountBookDispatchContext","AccountBookNextIdContext","AccountBookSelectCategoryContext","AccountBookProvider","useReducer","dispatch","selectCategoryState","useState","nextId","useRef","length","Provider","value","useAccountBookState","context","useContext","useAccountBookDispatch","useAccountBookSelectedCategory","AccountBookHeadBlock","PaymentNum","span","props","isMinus","css","allPayment","reduce","accumulator","amount","dateString","Date","toLocaleDateString","year","month","day","className","MySelectBoxBlock","listview","SelectBox","OptionList","ul","Option","li","MySelectBox","options","selectBoxStyle","listviewStyle","onSelectedChange","viewOption","setViewOption","selectedOption","setSelectedOption","prevSelectedId","options_left","option","toggleViewOption","useCallback","selectOption","e","selectedOptions","find","parseInt","target","current","viewStyle","style","onClick","text","key","defaultProps","width","fontSize","fontWeight","categorys","color","AccountBookSelectCategoryBlock","setSelectCategory","selectId","colorStyles","lighten","darken","outline","sizes","large","height","medium","small","sizeStyles","size","fullWidthStyle","fullWidth","StyledButton","button","MyButton","rest","reducer","name","initialForm","useInputs","form","slideUp","keyframes","AccountBookFormBlock","ButtonGroup","Input","input","AccountBookForm","onConfirm","onCancel","create","update","updateObj","categorys_left","category","initialText","title","initialPayment","initialCategory","selectCategoryId","payment","onChange","reset","clickHandler","autoFocus","ConfirmFormBlock","ConfirmForm","fadeIn","MyDialogBlock","Category","Text","Payment","Update","Remove","AccountBookItemBlock","categoryObj","categoryElement","removeOpen","setRemoveOpen","updateOpen","setUpdateOpen","onRemoveClick","onUpdateClick","onRemoveConfirm","onRemoveCancel","onUpdateConfirm","onUpdateCancel","AccountBookListBlock","accountBooks","selectedCategory","filteredAccountBooks","CircleButtton","open","setOpen","useAccountBookNextId","onToggle","onCreate","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.243ad123.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AccountBookTemplateBlock = styled.div`\r\n  width: 512px;\r\n  height: 768px;\r\n\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.04);\r\n\r\n  margin: 0 auto;\r\n  margin-top: 64px;\r\n  margin-bottom: 32px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 50px;\r\n`;\r\n\r\nfunction AccountBookTemplate({ children }) {\r\n  return <AccountBookTemplateBlock>{children}</AccountBookTemplateBlock>;\r\n}\r\n\r\nexport default React.memo(AccountBookTemplate);\r\n","import React, {\r\n  useReducer,\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useRef,\r\n} from 'react';\r\n\r\nconst initialAccountBooks = [\r\n  // { id: 1, title: '용개반점', category: 1, amount: 7000 },\r\n  // { id: 2, title: '양배추', category: 2, amount: 5000 },\r\n  // { id: 3, title: '택시비', category: 3, amount: 20000 },\r\n  // { id: 4, title: '관리비', category: 4, amount: 100000 },\r\n  // { id: 5, title: '병원진료', category: 5, amount: 7000 },\r\n];\r\n\r\nfunction accountBookReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CREATE':\r\n      return state.concat(action.newAccountBook);\r\n    case 'REMOVE':\r\n      return state.filter(accountBook => accountBook.id !== action.id);\r\n    case 'UPDATE':\r\n      console.log(action);\r\n      return state.map(accountBook =>\r\n        accountBook.id === action.updatedAccountBook.id\r\n          ? action.updatedAccountBook\r\n          : accountBook\r\n      );\r\n    default:\r\n      throw new Error(\r\n        `unhandled action in accountBookReducer. type : ${action.type}`\r\n      );\r\n  }\r\n}\r\n\r\nconst AccountBookStateContext = createContext();\r\nconst AccountBookDispatchContext = createContext();\r\nconst AccountBookNextIdContext = createContext();\r\nconst AccountBookSelectCategoryContext = createContext();\r\n\r\nexport function AccountBookProvider({ children }) {\r\n  const [state, dispatch] = useReducer(accountBookReducer, initialAccountBooks);\r\n  const selectCategoryState = useState(0);\r\n  const nextId = useRef(initialAccountBooks.length + 1);\r\n\r\n  return (\r\n    <AccountBookStateContext.Provider value={state}>\r\n      <AccountBookDispatchContext.Provider value={dispatch}>\r\n        <AccountBookNextIdContext.Provider value={nextId}>\r\n          <AccountBookSelectCategoryContext.Provider\r\n            value={selectCategoryState}\r\n          >\r\n            {children}\r\n          </AccountBookSelectCategoryContext.Provider>\r\n        </AccountBookNextIdContext.Provider>\r\n      </AccountBookDispatchContext.Provider>\r\n    </AccountBookStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAccountBookState() {\r\n  const context = useContext(AccountBookStateContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find AccountBookStateContext Provider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useAccountBookDispatch() {\r\n  const context = useContext(AccountBookDispatchContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find AccountBookDispatchContext Provider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useAccountBookNextId() {\r\n  const context = useContext(AccountBookNextIdContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find AccountBookNextIdContext Provider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useAccountBookSelectedCategory() {\r\n  const context = useContext(AccountBookSelectCategoryContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find AccountBookSelectCategoryContext Provider');\r\n  }\r\n  return context;\r\n}\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useAccountBookState } from './AccountBookContext';\r\n\r\nconst AccountBookHeadBlock = styled.div`\r\n  border-bottom: 1px solid #adb5bd;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 36px;\r\n  }\r\n\r\n  .date {\r\n    margin-top: 25px;\r\n    font-size: 21px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .all-payment {\r\n    font-size: 21px;\r\n    margin-top: 20px;\r\n    margin-bottom: 25px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst PaymentNum = styled.span`\r\n  margin-left: 5px;\r\n  color: #37b24d;\r\n  ${props =>\r\n    props.isMinus &&\r\n    css`\r\n      color: #f03e3e;\r\n    `}\r\n`;\r\n\r\nfunction AccountBookHead() {\r\n  const accountBooks = useAccountBookState();\r\n  const allPayment = accountBooks.reduce(\r\n    (accumulator, accountBook) => accumulator + accountBook.amount,\r\n    0\r\n  );\r\n\r\n  const dateString = new Date().toLocaleDateString('ko-KR', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  });\r\n\r\n  return (\r\n    <AccountBookHeadBlock>\r\n      <h1>오늘의 지출</h1>\r\n      <div className=\"date\">{dateString}</div>\r\n      <div className=\"all-payment\">\r\n        총 지출:\r\n        <PaymentNum isMinus={allPayment !== 0}>{allPayment * -1} 원</PaymentNum>\r\n      </div>\r\n    </AccountBookHeadBlock>\r\n  );\r\n}\r\n\r\nexport default React.memo(AccountBookHead);\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdExpandMore } from 'react-icons/md';\r\n\r\nconst MySelectBoxBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: space-around;\r\n  border: 1px solid #adb5bd;\r\n  border-radius: 3px;\r\n\r\n  overflow: auto;\r\n\r\n  ${props =>\r\n    props.listview &&\r\n    css`\r\n      background: #868e96;\r\n      cursor: default;\r\n      color: white;\r\n    `};\r\n`;\r\n\r\nconst SelectBox = styled.div`\r\n  padding: 2.8px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  overflow-x: auto;\r\n  ${props =>\r\n    props.listview\r\n      ? css`\r\n          background: #3b5bdb;\r\n          margin-bottom: 2px;\r\n          cursor: default;\r\n          &:hover {\r\n            background: #3b5bdb;\r\n          }\r\n        `\r\n      : css`\r\n          cursor: pointer;\r\n          &:hover {\r\n            background: #748ffc;\r\n          }\r\n        `};\r\n`;\r\n\r\nconst OptionList = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  ${props =>\r\n    props.listview\r\n      ? css`\r\n          display: block;\r\n        `\r\n      : css`\r\n          display: none;\r\n        `};\r\n`;\r\n\r\nconst Option = styled.li`\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  & + & {\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  &:hover {\r\n    background: #748ffc;\r\n  }\r\n`;\r\n\r\nfunction MySelectBox({\r\n  options,\r\n  value,\r\n  selectBoxStyle,\r\n  listviewStyle,\r\n  onSelectedChange,\r\n}) {\r\n  const [viewOption, setViewOption] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(value);\r\n  const prevSelectedId = useRef(selectedOption.id);\r\n\r\n  const options_left = options\r\n    ? options.filter(option => option.id !== selectedOption.id)\r\n    : null;\r\n\r\n  const toggleViewOption = useCallback(() => {\r\n    setViewOption(!viewOption);\r\n  }, [viewOption]);\r\n\r\n  if (options_left == null) return null;\r\n\r\n  const selectOption = e => {\r\n    const selectedOptions = options.find(\r\n      option => option.id === parseInt(e.target.id)\r\n    );\r\n    setSelectedOption(selectedOptions);\r\n    toggleViewOption();\r\n    if (prevSelectedId !== selectedOptions.id) {\r\n      onSelectedChange && onSelectedChange(selectedOptions.id);\r\n      prevSelectedId.current = selectedOptions.id;\r\n    }\r\n  };\r\n\r\n  const viewStyle = viewOption ? listviewStyle : selectBoxStyle;\r\n\r\n  return (\r\n    <MySelectBoxBlock listview={viewOption} style={viewStyle}>\r\n      <SelectBox listview={viewOption} onClick={toggleViewOption}>\r\n        {selectedOption.text} <MdExpandMore />\r\n      </SelectBox>\r\n      <OptionList listview={viewOption}>\r\n        {options_left &&\r\n          options_left.map(option => (\r\n            <Option key={option.id} id={option.id} onClick={selectOption}>\r\n              {option.text}\r\n            </Option>\r\n          ))}\r\n      </OptionList>\r\n    </MySelectBoxBlock>\r\n  );\r\n}\r\n\r\nMySelectBox.defaultProps = {\r\n  selectBoxStyle: {\r\n    width: 'auto',\r\n    fontSize: '14px',\r\n    fontWeight: '400',\r\n  },\r\n  listviewStyle: {\r\n    width: '70px',\r\n    fontSize: '14px',\r\n    fontWeight: '400',\r\n  },\r\n};\r\n\r\nexport default React.memo(MySelectBox);\r\n","export const categorys = [\r\n  { id: 0, text: '전체', color: '#e7f5ff' },\r\n  { id: 1, text: '식사', color: '#ffec99' },\r\n  { id: 2, text: '식료품', color: '#d8f5a2' },\r\n  { id: 3, text: '교통', color: '#ffc078' },\r\n  { id: 4, text: '생활', color: '#da77f2' },\r\n  { id: 5, text: '의료', color: '#4dabf7' },\r\n];\r\n","import React, { useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport MySelectBox from './MySelectBox';\r\nimport { useAccountBookSelectedCategory } from './AccountBookContext';\r\nimport { categorys } from '../StaticDatas/staticDatas';\r\n\r\nconst AccountBookSelectCategoryBlock = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  border-bottom: 1px solid #adb5bd;\r\n\r\n  padding: 15px 0px;\r\n  font-size: 21px;\r\n  font-weight: bold;\r\n\r\n  span {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nfunction AccountBookSelectCategory() {\r\n  const [_, setSelectCategory] = useAccountBookSelectedCategory();\r\n\r\n  const onSelectedChange = useCallback(\r\n    selectId => {\r\n      setSelectCategory(selectId);\r\n    },\r\n    [setSelectCategory]\r\n  );\r\n\r\n  return (\r\n    <AccountBookSelectCategoryBlock>\r\n      <span>카테고리별로 보기:</span>\r\n      {categorys && (\r\n        <MySelectBox\r\n          options={categorys}\r\n          value={categorys[0]}\r\n          onSelectedChange={onSelectedChange}\r\n        />\r\n      )}\r\n    </AccountBookSelectCategoryBlock>\r\n  );\r\n}\r\n\r\nexport default React.memo(AccountBookSelectCategory);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { darken, lighten } from 'polished';\r\n\r\nconst colorStyles = css`\r\n  ${({ color }) => {\r\n    return css`\r\n      background: ${color};\r\n      &:hover {\r\n        background: ${lighten(0.1, color)};\r\n      }\r\n      &:active {\r\n        background: ${darken(0.1, color)};\r\n      }\r\n      ${props =>\r\n        props.outline &&\r\n        css`\r\n          color: ${color};\r\n          background: none;\r\n          border: 1px solid ${color};\r\n          &:hover {\r\n            background: ${color};\r\n            color: white;\r\n          }\r\n        `}\r\n    `;\r\n  }}\r\n`;\r\n\r\nconst sizes = {\r\n  large: {\r\n    height: '3rem',\r\n    fontSize: '1.25rem',\r\n  },\r\n  medium: {\r\n    height: '2.25rem',\r\n    fontSize: '1rem',\r\n  },\r\n  small: {\r\n    height: '1.75rem',\r\n    fontSize: '0.875rem',\r\n  },\r\n};\r\n\r\nconst sizeStyles = css`\r\n  ${({ size }) => css`\r\n    height: ${sizes[size].height};\r\n    font-size: ${sizes[size].fontSize};\r\n  `}\r\n`;\r\n\r\nconst fullWidthStyle = css`\r\n  ${props =>\r\n    props.fullWidth &&\r\n    css`\r\n      width: 100%;\r\n      justify-content: center;\r\n      & + & {\r\n        margin-left: 0;\r\n        margin-top: 1rem;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  /* 공통 스타일 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n\r\n  /* 크기 */\r\n  ${sizeStyles}\r\n\r\n  /* 색상 */\r\n  ${colorStyles}\r\n\r\n  /* 기타 */\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n\r\n  ${fullWidthStyle}\r\n`;\r\n\r\nfunction MyButton({ children, color, size, outline, fullWidth, ...rest }) {\r\n  return (\r\n    <StyledButton\r\n      color={color}\r\n      size={size}\r\n      outline={outline}\r\n      fullWidth={fullWidth}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n}\r\n\r\nMyButton.defaultProps = {\r\n  color: '#4263eb',\r\n  size: 'medium',\r\n};\r\n\r\nexport default React.memo(MyButton);\r\n","import React, { useCallback, useReducer } from 'react';\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return { ...state, [action.name]: action.value };\r\n\r\n    case 'RESET':\r\n      return { ...action.initialForm };\r\n\r\n    default:\r\n      throw new Error('Unhandled action');\r\n  }\r\n}\r\n\r\nfunction useInputs(initialForm) {\r\n  // const[form, setForm] = useState(initialForm);\r\n  const [form, dispatch] = useReducer(reducer, initialForm);\r\n\r\n  const onChange = useCallback(e => {\r\n    const { name, value } = e.target;\r\n\r\n    // setForm((form) => ({...form, [name]:value}));\r\n\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      name,\r\n      value,\r\n    });\r\n  }, []);\r\n\r\n  // const reset = useCallback(() => setForm(initialForm), [initialForm]);\r\n  const reset = useCallback(() => {\r\n    dispatch({\r\n      type: 'RESET',\r\n      initialForm,\r\n    });\r\n  }, [initialForm]);\r\n\r\n  return [form, onChange, reset];\r\n}\r\n\r\nexport default useInputs;\r\n","import React, { useCallback } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { categorys } from '../../StaticDatas/staticDatas';\r\nimport MySelectBox from '../MySelectBox';\r\nimport MyButton from '../MyButton';\r\nimport { useRef } from 'react';\r\nimport useInputs from '../useInputs';\r\n\r\nconst slideUp = keyframes`\r\n  from {\r\n    transform: translateY(200px);\r\n  }\r\n  to {\r\n    transform: translateY(0px);\r\n  }\r\n`;\r\n\r\nconst AccountBookFormBlock = styled.div`\r\n  width: 320px;\r\n  padding: 1.5rem;\r\n  background: white;\r\n  border-radius: 2px;\r\n\r\n  animation-duration: 0.25s;\r\n  animation-timing-function: ease-out;\r\n  animation-name: ${slideUp};\r\n  animation-fill-mode: forwards;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  margin-top: 3rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nfunction AccountBookForm({ onConfirm, onCancel, create, update, updateObj }) {\r\n  const categorys_left = categorys.filter(category => category.id !== 0);\r\n\r\n  const initialText = updateObj ? updateObj.title : '';\r\n  const initialPayment = updateObj ? parseInt(updateObj.amount) : 0;\r\n  const initialCategory = updateObj\r\n    ? categorys_left.find(category => category.id === updateObj.category)\r\n    : categorys_left[0];\r\n\r\n  const selectCategoryId = useRef(1);\r\n\r\n  const [form, onChange, reset] = useInputs({\r\n    title: initialText,\r\n    payment: initialPayment,\r\n  });\r\n\r\n  const { title, payment } = form;\r\n\r\n  const onSelectedChange = useCallback(\r\n    selectId => {\r\n      selectCategoryId.current = selectId;\r\n    },\r\n    [selectCategoryId]\r\n  );\r\n\r\n  const clickHandler = useCallback(\r\n    e => {\r\n      if (e.target.name === 'confirm') {\r\n        const newAccountBook = {\r\n          title,\r\n          category: selectCategoryId.current,\r\n          amount: parseInt(payment),\r\n        };\r\n        onConfirm(newAccountBook);\r\n      } else {\r\n        onCancel();\r\n      }\r\n      reset();\r\n    },\r\n    [onCancel, onConfirm, payment, reset, title]\r\n  );\r\n\r\n  return (\r\n    <AccountBookFormBlock>\r\n      <h2>\r\n        지출\r\n        {create && ' 등록'}\r\n        {update && ' 수정'}\r\n      </h2>\r\n      <h3>내용</h3>\r\n      <Input autoFocus name=\"title\" value={title} onChange={onChange} />\r\n      <h3>금액</h3>\r\n      <Input type=\"number\" name=\"payment\" value={payment} onChange={onChange} />\r\n      <h3>카테고리</h3>\r\n      <MySelectBox\r\n        options={categorys_left}\r\n        value={initialCategory}\r\n        selectBoxStyle={{ width: '100%', fontSize: '18px' }}\r\n        listviewStyle={{ width: '100%' }}\r\n        onSelectedChange={onSelectedChange}\r\n      />\r\n      <ButtonGroup>\r\n        <MyButton color=\"gray\" name=\"cancel\" onClick={clickHandler}>\r\n          취소\r\n        </MyButton>\r\n        <MyButton name=\"confirm\" onClick={clickHandler}>\r\n          {create && ' 등록'}\r\n          {update && ' 수정'}\r\n        </MyButton>\r\n      </ButtonGroup>\r\n    </AccountBookFormBlock>\r\n  );\r\n}\r\n\r\nexport default AccountBookForm;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport MyButton from '../MyButton';\r\n\r\nconst slideUp = keyframes`\r\n  from {\r\n    transform: translateY(200px);\r\n  }\r\n  to {\r\n    transform: translateY(0px);\r\n  }\r\n`;\r\n\r\nconst ConfirmFormBlock = styled.div`\r\n  width: 320px;\r\n  padding: 1.5rem;\r\n  background: white;\r\n  border-radius: 2px;\r\n\r\n  animation-duration: 0.25s;\r\n  animation-timing-function: ease-out;\r\n  animation-name: ${slideUp};\r\n  animation-fill-mode: forwards;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  margin-top: 3rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nfunction ConfirmForm({ text, onConfirm, onCancel }) {\r\n  return (\r\n    <ConfirmFormBlock>\r\n      <h2>{text}</h2>\r\n      <ButtonGroup>\r\n        <MyButton color=\"gray\" name=\"cancel\" onClick={onCancel}>\r\n          취소\r\n        </MyButton>\r\n        <MyButton color=\"#f03e3e\" name=\"confirm\" onClick={onConfirm}>\r\n          삭제\r\n        </MyButton>\r\n      </ButtonGroup>\r\n    </ConfirmFormBlock>\r\n  );\r\n}\r\n\r\nexport default ConfirmForm;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport AccountBookForm from './DialogsFormType/AccountBookForm';\r\nimport ConfirmForm from './DialogsFormType/ConfirmForm';\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0\r\n  }\r\n  to {\r\n    opacity: 1\r\n  }\r\n`;\r\n\r\nconst MyDialogBlock = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  padding: 20px;\r\n  h1 {\r\n    margin: 0;\r\n  }\r\n  h3 {\r\n    margin: 0;\r\n  }\r\n\r\n  animation-duration: 0.25s;\r\n  animation-timing-function: ease-out;\r\n  animation-name: ${fadeIn};\r\n  animation-fill-mode: forwards;\r\n`;\r\n\r\nfunction MyDialog({ type, onConfirm, onCancel, updateObj }) {\r\n  return (\r\n    <MyDialogBlock>\r\n      {type === 'create' && (\r\n        <AccountBookForm create onConfirm={onConfirm} onCancel={onCancel} />\r\n      )}\r\n      {type === 'update' && (\r\n        <AccountBookForm\r\n          update\r\n          updateObj={updateObj}\r\n          onConfirm={onConfirm}\r\n          onCancel={onCancel}\r\n        />\r\n      )}\r\n      {type === 'remove' && (\r\n        <ConfirmForm\r\n          text=\"정말 삭제하시겠습니까?\"\r\n          onConfirm={onConfirm}\r\n          onCancel={onCancel}\r\n        />\r\n      )}\r\n    </MyDialogBlock>\r\n  );\r\n}\r\n\r\nexport default React.memo(MyDialog);\r\n","import React, { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdCreate, MdDelete } from 'react-icons/md';\r\nimport { useAccountBookDispatch } from './AccountBookContext';\r\nimport MyDialog from './MyDialog';\r\nimport { categorys } from '../StaticDatas/staticDatas';\r\n\r\nconst Category = styled.div`\r\n  padding: 13px 20px;\r\n  background-color: ${props => props.color || '#ffffff'};\r\n  border-radius: 10px;\r\n  font-size: 19px;\r\n  font-weight: 400;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  color: #495057;\r\n`;\r\n\r\nconst Payment = styled.div`\r\n  color: #f03e3e;\r\n\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst Update = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n`;\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n`;\r\n\r\nconst AccountBookItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n`;\r\n\r\nfunction AccountBookItem({ id, title, amount, category }) {\r\n  const categoryObj = useCallback(\r\n    categorys.find(categoryElement => categoryElement.id === category)\r\n  );\r\n\r\n  const [removeOpen, setRemoveOpen] = useState(false);\r\n  const [updateOpen, setUpdateOpen] = useState(false);\r\n  const dispatch = useAccountBookDispatch();\r\n\r\n  const onRemoveClick = useCallback(() => setRemoveOpen(!removeOpen), [\r\n    removeOpen,\r\n  ]);\r\n  const onUpdateClick = useCallback(() => setUpdateOpen(!updateOpen), [\r\n    updateOpen,\r\n  ]);\r\n\r\n  const onRemoveConfirm = useCallback(() => {\r\n    dispatch({ type: 'REMOVE', id });\r\n    setRemoveOpen(false);\r\n  }, [id, dispatch]);\r\n\r\n  const onRemoveCancel = useCallback(() => {\r\n    setRemoveOpen(false);\r\n  }, []);\r\n\r\n  const onUpdateConfirm = useCallback(\r\n    updatedAccountBook => {\r\n      updatedAccountBook = { id, ...updatedAccountBook };\r\n      dispatch({ type: 'UPDATE', updatedAccountBook });\r\n      setUpdateOpen(false);\r\n    },\r\n    [id, dispatch]\r\n  );\r\n\r\n  const onUpdateCancel = useCallback(() => {\r\n    setUpdateOpen(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {removeOpen && (\r\n        <MyDialog\r\n          type=\"remove\"\r\n          onConfirm={onRemoveConfirm}\r\n          onCancel={onRemoveCancel}\r\n        />\r\n      )}\r\n      {updateOpen && (\r\n        <MyDialog\r\n          type=\"update\"\r\n          onConfirm={onUpdateConfirm}\r\n          onCancel={onUpdateCancel}\r\n          updateObj={{ id, title, amount, category }}\r\n        />\r\n      )}\r\n      <AccountBookItemBlock>\r\n        <Category color={categoryObj.color}>{categoryObj.text}</Category>\r\n        <Text>{title}</Text>\r\n        <Payment>{amount !== 0 ? '-' + amount : '0'} 원</Payment>\r\n        <Update onClick={onUpdateClick}>\r\n          <MdCreate />\r\n        </Update>\r\n        <Remove onClick={onRemoveClick}>\r\n          <MdDelete />\r\n        </Remove>\r\n      </AccountBookItemBlock>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(AccountBookItem);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AccountBookItem from './AccountBookItem';\r\nimport {\r\n  useAccountBookState,\r\n  useAccountBookSelectedCategory,\r\n} from './AccountBookContext';\r\n\r\nconst AccountBookListBlock = styled.div`\r\n  flex: 1;\r\n  padding-bottom: 48px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nfunction AccountBookList() {\r\n  const accountBooks = useAccountBookState();\r\n  const [selectedCategory, _] = useAccountBookSelectedCategory();\r\n\r\n  const filteredAccountBooks =\r\n    selectedCategory === 0\r\n      ? accountBooks\r\n      : accountBooks.filter(\r\n          accountBook => accountBook.category === selectedCategory\r\n        );\r\n\r\n  return (\r\n    <AccountBookListBlock>\r\n      {filteredAccountBooks.map(accountBook => (\r\n        <AccountBookItem\r\n          id={accountBook.id}\r\n          key={accountBook.id}\r\n          category={accountBook.category}\r\n          title={accountBook.title}\r\n          amount={accountBook.amount}\r\n        />\r\n      ))}\r\n    </AccountBookListBlock>\r\n  );\r\n}\r\n\r\nexport default React.memo(AccountBookList);\r\n","import React, { useState, useCallback } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport {\r\n  useAccountBookDispatch,\r\n  useAccountBookNextId,\r\n} from './AccountBookContext';\r\nimport MyDialog from './MyDialog';\r\n\r\nconst CircleButtton = styled.button`\r\n  background: #0c8599;\r\n  &:hover {\r\n    background: #15aabf;\r\n  }\r\n  &:active {\r\n    background: #0b7285;\r\n  }\r\n\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  position: absolute;\r\n  right: 2%;\r\n  bottom: 2%;\r\n\r\n  font-size: 60px;\r\n  color: white;\r\n  border-radius: 50%;\r\n\r\n  border: none;\r\n  outline: none;\r\n\r\n  transition: 0.125s all ease-in;\r\n  ${props =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: rotate(45deg);\r\n    `}\r\n`;\r\n\r\nfunction AccountBookCreate() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const dispatch = useAccountBookDispatch();\r\n  const nextId = useAccountBookNextId();\r\n\r\n  const onToggle = useCallback(() => setOpen(!open), [open]);\r\n\r\n  const onCreate = useCallback(\r\n    newAccountBook => {\r\n      dispatch({\r\n        type: 'CREATE',\r\n        newAccountBook: { ...newAccountBook, id: nextId.current },\r\n      });\r\n      nextId.current += 1;\r\n      setOpen(false);\r\n    },\r\n    [dispatch, nextId]\r\n  );\r\n\r\n  const onCancel = useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <MyDialog\r\n          type=\"create\"\r\n          onConfirm={onCreate}\r\n          onCancel={onCancel}\r\n        ></MyDialog>\r\n      )}\r\n      <CircleButtton onClick={onToggle} open={open}>\r\n        <MdAdd />\r\n      </CircleButtton>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(AccountBookCreate);\r\n","import React from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport AccountBookTemplate from './Components/AccountBookTemplate';\r\nimport AccountBookHead from './Components/AccountBookHead';\r\nimport AccountBookSelectCategory from './Components/AccountBookSelectCategory';\r\nimport AccountBookList from './Components/AccountBookList';\r\nimport AccountBookCreate from './Components/AccountBookCreate';\r\nimport { AccountBookProvider } from './Components/AccountBookContext';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body{\r\n    background-color: #dee2e6;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <AccountBookProvider>\r\n      <GlobalStyle />\r\n      <AccountBookTemplate>\r\n        <AccountBookHead />\r\n        <AccountBookSelectCategory />\r\n        <AccountBookList />\r\n        <AccountBookCreate />\r\n      </AccountBookTemplate>\r\n    </AccountBookProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}